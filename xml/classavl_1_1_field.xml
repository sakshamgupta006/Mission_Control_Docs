<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classavl_1_1_field" kind="class" language="C++" prot="public">
    <compoundname>avl::Field</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classavl_1_1_field_1a982531387d340fce03d4c19fead6b995" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t avl::Field::descriptor</definition>
        <argsstring></argsstring>
        <name>descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="261" column="13" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classavl_1_1_field_1a54b123fb37541090a6cd48f30cee4b44" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; avl::Field::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="264" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classavl_1_1_field_1a5475cdc41ee904f5c5b1452c343d5064" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classavl_1_1_field" kindref="compound">Field</ref> &gt;</type>
        <definition>static std::vector&lt;Field&gt; avl::Field::parse_multiple</definition>
        <argsstring>(std::vector&lt; uint8_t &gt; bytes)</argsstring>
        <name>parse_multiple</name>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="39" column="24" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="39" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classavl_1_1_field_1a668ebc4bbe165c5312e744f739d9c937" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Field::Field</definition>
        <argsstring>()</argsstring>
        <name>Field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="92" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1a4833aa8c977e0ed9bb96611812fd58cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Field::Field</definition>
        <argsstring>(uint8_t descriptor)</argsstring>
        <name>Field</name>
        <param>
          <type>uint8_t</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="103" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1a4ffe519edf357997bff6505b7de01bce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Field::Field</definition>
        <argsstring>(uint8_t descriptor, std::vector&lt; uint8_t &gt; data)</argsstring>
        <name>Field</name>
        <param>
          <type>uint8_t</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="115" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1aff833fb455a547ecf818a0c502f2c29a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Field::Field</definition>
        <argsstring>(std::vector&lt; uint8_t &gt; bytes)</argsstring>
        <name>Field</name>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="129" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1a02a88e1836997292f15a8850251d53b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual avl::Field::~Field</definition>
        <argsstring>()</argsstring>
        <name>~Field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="138" column="13" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1a7923b549828801cc2e4202ad4673251a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t avl::Field::get_descriptor</definition>
        <argsstring>()</argsstring>
        <name>get_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="148" column="13" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1ad253758014a31a559cd7250eb992437b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void avl::Field::set_descriptor</definition>
        <argsstring>(uint8_t descriptor)</argsstring>
        <name>set_descriptor</name>
        <param>
          <type>uint8_t</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="158" column="10" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1ab3dcbddd3abe3e8f9bb1c8faa4e32fc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; avl::Field::get_bytes</definition>
        <argsstring>()</argsstring>
        <name>get_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="168" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="168" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1a6c4eef52d892e1d665e4d5aaad8b7b94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string avl::Field::to_string</definition>
        <argsstring>()</argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="184" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1a65fd8390d7fc44ed5f5594b91b30faf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void avl::Field::set_bytes</definition>
        <argsstring>(std::vector&lt; uint8_t &gt; bytes)</argsstring>
        <name>set_bytes</name>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="198" column="10" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="198" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1ac167112b32cc3fee3cf9c5543d5fb004" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t avl::Field::get_data_length</definition>
        <argsstring>()</argsstring>
        <name>get_data_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="221" column="14" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1ae1b213a48d904ec607886100266fe912" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; avl::Field::get_data</definition>
        <argsstring>()</argsstring>
        <name>get_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="231" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1a7555424b34984cae9e21cbb1922c4117" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void avl::Field::set_data</definition>
        <argsstring>(std::vector&lt; uint8_t &gt; data)</argsstring>
        <name>set_data</name>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="241" column="10" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_field_1af6fc021ccfdf4884f684cf17f656ecb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string avl::Field::get_string</definition>
        <argsstring>()</argsstring>
        <name>get_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="253" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="253" bodyend="256"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classavl_1_1_field_1ac53ab003fe6a63959ca95b7f15deac83" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void avl::Field::validate_bytes</definition>
        <argsstring>(std::vector&lt; uint8_t &gt; bytes)</argsstring>
        <name>validate_bytes</name>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="275" column="10" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="275" bodyend="301"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/cooper/test/avl_gui_new/include/protocol/field.h" line="29" column="1" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/field.h" bodystart="28" bodyend="303"/>
    <listofallmembers>
      <member refid="classavl_1_1_field_1a54b123fb37541090a6cd48f30cee4b44" prot="private" virt="non-virtual"><scope>avl::Field</scope><name>data</name></member>
      <member refid="classavl_1_1_field_1a982531387d340fce03d4c19fead6b995" prot="private" virt="non-virtual"><scope>avl::Field</scope><name>descriptor</name></member>
      <member refid="classavl_1_1_field_1a668ebc4bbe165c5312e744f739d9c937" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>Field</name></member>
      <member refid="classavl_1_1_field_1a4833aa8c977e0ed9bb96611812fd58cd" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>Field</name></member>
      <member refid="classavl_1_1_field_1a4ffe519edf357997bff6505b7de01bce" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>Field</name></member>
      <member refid="classavl_1_1_field_1aff833fb455a547ecf818a0c502f2c29a" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>Field</name></member>
      <member refid="classavl_1_1_field_1ab3dcbddd3abe3e8f9bb1c8faa4e32fc6" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>get_bytes</name></member>
      <member refid="classavl_1_1_field_1ae1b213a48d904ec607886100266fe912" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>get_data</name></member>
      <member refid="classavl_1_1_field_1ac167112b32cc3fee3cf9c5543d5fb004" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>get_data_length</name></member>
      <member refid="classavl_1_1_field_1a7923b549828801cc2e4202ad4673251a" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>get_descriptor</name></member>
      <member refid="classavl_1_1_field_1af6fc021ccfdf4884f684cf17f656ecb7" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>get_string</name></member>
      <member refid="classavl_1_1_field_1a5475cdc41ee904f5c5b1452c343d5064" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>parse_multiple</name></member>
      <member refid="classavl_1_1_field_1a65fd8390d7fc44ed5f5594b91b30faf3" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>set_bytes</name></member>
      <member refid="classavl_1_1_field_1a7555424b34984cae9e21cbb1922c4117" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>set_data</name></member>
      <member refid="classavl_1_1_field_1ad253758014a31a559cd7250eb992437b" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>set_descriptor</name></member>
      <member refid="classavl_1_1_field_1a6c4eef52d892e1d665e4d5aaad8b7b94" prot="public" virt="non-virtual"><scope>avl::Field</scope><name>to_string</name></member>
      <member refid="classavl_1_1_field_1ac53ab003fe6a63959ca95b7f15deac83" prot="private" virt="non-virtual"><scope>avl::Field</scope><name>validate_bytes</name></member>
      <member refid="classavl_1_1_field_1a02a88e1836997292f15a8850251d53b6" prot="public" virt="virtual"><scope>avl::Field</scope><name>~Field</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

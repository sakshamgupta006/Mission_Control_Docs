<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classavl_1_1_parameter" kind="class" language="C++" prot="public">
    <compoundname>avl::Parameter</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classavl_1_1_parameter_1a624bc0c010c85f9dc6f6865857ec3964" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string avl::Parameter::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="44" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classavl_1_1_parameter_1a6256ac0ba710825c32468939bb74e05a" prot="public" static="no" mutable="no">
        <type>Type</type>
        <definition>Type avl::Parameter::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="47" column="10" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classavl_1_1_parameter_1a5b635eaeaf75c0cf54ed3f21e1b8a8a8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; avl::Parameter::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="51" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classavl_1_1_parameter_1ab62ae9513cd02c8d1f805263101bde55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>()</argsstring>
        <name>Parameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="59" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1ae931c41a1913a941713dc9b9799f405f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>(std::string name, Type type, std::vector&lt; uint8_t &gt; value)</argsstring>
        <name>Parameter</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::vector&lt; uint8_t &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="71" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1ab8924079949c7037af60766bc52fc323" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>(std::string name, bool value)</argsstring>
        <name>Parameter</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="83" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a0c0be9bcb4912575083fbc9d5be7a817" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>(std::string name, int value)</argsstring>
        <name>Parameter</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="95" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a96e534b29b740870a84669bc254b1a8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>(std::string name, double value)</argsstring>
        <name>Parameter</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="107" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a542ffca339964c23470365e442af8e24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>(std::string name, std::string value)</argsstring>
        <name>Parameter</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="119" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a5de6e590e0a2bc3772bf56e5244f72d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>(std::string name, const char *value)</argsstring>
        <name>Parameter</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="132" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1ac489f0281af43cf50015de207c87d76e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>avl::Parameter::Parameter</definition>
        <argsstring>(std::vector&lt; Field &gt; fields)</argsstring>
        <name>Parameter</name>
        <param>
          <type>std::vector&lt; <ref refid="classavl_1_1_field" kindref="compound">Field</ref> &gt;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="144" column="5" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a702a3bc0a51cde1a2aeae3f4e7f098d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual avl::Parameter::~Parameter</definition>
        <argsstring>()</argsstring>
        <name>~Parameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="153" column="13" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1ad1bf3a4e117d3d9a40d9c396fea4e29d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void avl::Parameter::from_fields</definition>
        <argsstring>(std::vector&lt; Field &gt; fields)</argsstring>
        <name>from_fields</name>
        <param>
          <type>std::vector&lt; <ref refid="classavl_1_1_field" kindref="compound">Field</ref> &gt;</type>
          <declname>fields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="164" column="10" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="164" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a259371f88a82c310df0eca03de243153" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classavl_1_1_field" kindref="compound">Field</ref> &gt;</type>
        <definition>std::vector&lt;Field&gt; avl::Parameter::to_fields</definition>
        <argsstring>(uint8_t start_desc=0x00)</argsstring>
        <name>to_fields</name>
        <param>
          <type>uint8_t</type>
          <declname>start_desc</declname>
          <defval>0x00</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="205" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1ad0d9cafb5935ddaf008d234b06059cd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool avl::Parameter::to_bool</definition>
        <argsstring>()</argsstring>
        <name>to_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="219" column="10" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="219" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a3f492e90c984f708251a436237320d28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int avl::Parameter::to_int</definition>
        <argsstring>()</argsstring>
        <name>to_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="232" column="9" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1a8d41eeaab359d66e7b3ce08bfd986c16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T avl::Parameter::to_enum</definition>
        <argsstring>()</argsstring>
        <name>to_enum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="247" column="7" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="247" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1abb31692b1959152e1b16dbca94a9d868" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double avl::Parameter::to_double</definition>
        <argsstring>()</argsstring>
        <name>to_double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="260" column="12" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="260" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classavl_1_1_parameter_1af926cb4e12c3d8be30b4d92b0f5da287" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string avl::Parameter::to_string</definition>
        <argsstring>()</argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="273" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="273" bodyend="278"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" line="39" column="1" bodyfile="/home/cooper/test/avl_gui_new/include/protocol/parameter.h" bodystart="38" bodyend="280"/>
    <listofallmembers>
      <member refid="classavl_1_1_parameter_1ad1bf3a4e117d3d9a40d9c396fea4e29d" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>from_fields</name></member>
      <member refid="classavl_1_1_parameter_1a624bc0c010c85f9dc6f6865857ec3964" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>name</name></member>
      <member refid="classavl_1_1_parameter_1ab62ae9513cd02c8d1f805263101bde55" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1ae931c41a1913a941713dc9b9799f405f" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1ab8924079949c7037af60766bc52fc323" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1a0c0be9bcb4912575083fbc9d5be7a817" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1a96e534b29b740870a84669bc254b1a8e" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1a542ffca339964c23470365e442af8e24" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1a5de6e590e0a2bc3772bf56e5244f72d1" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1ac489f0281af43cf50015de207c87d76e" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>Parameter</name></member>
      <member refid="classavl_1_1_parameter_1ad0d9cafb5935ddaf008d234b06059cd9" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>to_bool</name></member>
      <member refid="classavl_1_1_parameter_1abb31692b1959152e1b16dbca94a9d868" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>to_double</name></member>
      <member refid="classavl_1_1_parameter_1a8d41eeaab359d66e7b3ce08bfd986c16" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>to_enum</name></member>
      <member refid="classavl_1_1_parameter_1a259371f88a82c310df0eca03de243153" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>to_fields</name></member>
      <member refid="classavl_1_1_parameter_1a3f492e90c984f708251a436237320d28" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>to_int</name></member>
      <member refid="classavl_1_1_parameter_1af926cb4e12c3d8be30b4d92b0f5da287" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>to_string</name></member>
      <member refid="classavl_1_1_parameter_1a6256ac0ba710825c32468939bb74e05a" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>type</name></member>
      <member refid="classavl_1_1_parameter_1a5b635eaeaf75c0cf54ed3f21e1b8a8a8" prot="public" virt="non-virtual"><scope>avl::Parameter</scope><name>value</name></member>
      <member refid="classavl_1_1_parameter_1a702a3bc0a51cde1a2aeae3f4e7f098d6" prot="public" virt="virtual"><scope>avl::Parameter</scope><name>~Parameter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

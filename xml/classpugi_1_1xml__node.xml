<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpugi_1_1xml__node" kind="class" language="C++" prot="public">
    <compoundname>pugi::xml_node</compoundname>
    <derivedcompoundref refid="classpugi_1_1xml__document" prot="public" virt="non-virtual">pugi::xml_document</derivedcompoundref>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classpugi_1_1xml__node_1a83fe32b933530b244865ee401b08b037" prot="protected" static="no">
        <type>void(*</type>
        <definition>typedef void(* pugi::xml_node::unspecified_bool_type) (xml_node ***)</definition>
        <argsstring>)(xml_node ***)</argsstring>
        <name>unspecified_bool_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="462" column="9" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="462" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpugi_1_1xml__node_1ae053ea39add5a64de584f7a81212e388" prot="public" static="no">
        <type><ref refid="classpugi_1_1xml__node__iterator" kindref="compound">xml_node_iterator</ref></type>
        <definition>typedef xml_node_iterator pugi::xml_node::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="675" column="27" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="675" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpugi_1_1xml__node_1a9084f97350ffc64af1eaf7c17c57f4ba" prot="public" static="no">
        <type><ref refid="classpugi_1_1xml__attribute__iterator" kindref="compound">xml_attribute_iterator</ref></type>
        <definition>typedef xml_attribute_iterator pugi::xml_node::attribute_iterator</definition>
        <argsstring></argsstring>
        <name>attribute_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="681" column="32" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="681" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpugi_1_1xml__node_1aeff34dec57ee910e3344631528969539" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class xml_attribute_iterator</definition>
        <argsstring></argsstring>
        <name>xml_attribute_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="455" column="1" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classpugi_1_1xml__node_1aa25e28e29a8cec4daa60cdd2d5934757" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class xml_node_iterator</definition>
        <argsstring></argsstring>
        <name>xml_node_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="456" column="1" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classpugi_1_1xml__node_1a1e60ab2fa6d6adb56f4b833761fc0b66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class xml_named_node_iterator</definition>
        <argsstring></argsstring>
        <name>xml_named_node_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="457" column="1" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="457" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classpugi_1_1xml__node_1a45a5b342de1e37a60565f7693f03cc08" prot="protected" static="no" mutable="no">
        <type>xml_node_struct *</type>
        <definition>xml_node_struct* pugi::xml_node::_root</definition>
        <argsstring></argsstring>
        <name>_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="460" column="17" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="460" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpugi_1_1xml__node_1a1db6c67c97cddd74f59d872057987432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pugi::xml_node::xml_node</definition>
        <argsstring>()</argsstring>
        <name>xml_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a6897fb4e94def0ec60fda1f459bd746d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>pugi::xml_node::xml_node</definition>
        <argsstring>(xml_node_struct *p)</argsstring>
        <name>xml_node</name>
        <param>
          <type>xml_node_struct *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="469" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1aea48109b0aa81ede9d488263412ef363" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pugi::xml_node::operator unspecified_bool_type</definition>
        <argsstring>() const</argsstring>
        <name>operator unspecified_bool_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1aab507574954191a49fa02c4f21e91960" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::operator!</definition>
        <argsstring>() const</argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="475" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a93ec2237e647a58d3b02b5a3034ee38d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::operator==</definition>
        <argsstring>(const xml_node &amp;r) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="478" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a40824364b7bfc39806c315d6a1efc5f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::operator!=</definition>
        <argsstring>(const xml_node &amp;r) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="479" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8f72f466e4e44ef77a49fc1f3b51b783" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::operator&lt;</definition>
        <argsstring>(const xml_node &amp;r) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ade33edf2c1dd7341f802f141fac87398" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::operator&gt;</definition>
        <argsstring>(const xml_node &amp;r) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="481" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a322be74394b3726d74ce588f98f46559" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::operator&lt;=</definition>
        <argsstring>(const xml_node &amp;r) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a307aea478b6a80611571650ef6c75c4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::operator&gt;=</definition>
        <argsstring>(const xml_node &amp;r) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="483" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ad6c9835f849ac6aeba8b920a63197b08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="486" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ac5405119b45e539d3527fe6941546099" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>xml_node_type</type>
        <definition>xml_node_type pugi::xml_node::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="489" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1afd9a4fad8bbbcb2ff8bf099f140dae48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char_t *</type>
        <definition>const char_t* pugi::xml_node::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="492" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a0c72eab9fc89e492d8013d9f269820a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char_t *</type>
        <definition>const char_t* pugi::xml_node::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="496" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a3eaa68e1bcad9956590c0b8812d75bdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::first_attribute</definition>
        <argsstring>() const</argsstring>
        <name>first_attribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="499" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a990a18d73198bcc1126151bfda3b6d3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::last_attribute</definition>
        <argsstring>() const</argsstring>
        <name>last_attribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="500" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a7ed8da5b747abef912f014f91c0560da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::first_child</definition>
        <argsstring>() const</argsstring>
        <name>first_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="503" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1aae4b30f38f3b2fb92552766d47cc8899" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::last_child</definition>
        <argsstring>() const</argsstring>
        <name>last_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="504" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ae20b80ae97d770242b06ff6e3f2852f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::next_sibling</definition>
        <argsstring>() const</argsstring>
        <name>next_sibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="507" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a7fe1a00db01eaedb4f3ee592aa5d735c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::previous_sibling</definition>
        <argsstring>() const</argsstring>
        <name>previous_sibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="508" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1aa5e551fb7095338188a7ed33ca6026b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="511" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a775f091ea1847d0c5d841b81718ed9e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::root</definition>
        <argsstring>() const</argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="514" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1aba8c6bfb169529ee9f3d6f07a5eee9e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__text" kindref="compound">xml_text</ref></type>
        <definition>xml_text pugi::xml_node::text</definition>
        <argsstring>() const</argsstring>
        <name>text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="517" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1af3994814d80cdf2aef455bf3948c3385" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::child</definition>
        <argsstring>(const char_t *name) const</argsstring>
        <name>child</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="520" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8992c17cd7218cf24c5150eeb47e1451" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::attribute</definition>
        <argsstring>(const char_t *name) const</argsstring>
        <name>attribute</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="521" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a3cfa7927b5176668d8cfb6883eb4c3bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::next_sibling</definition>
        <argsstring>(const char_t *name) const</argsstring>
        <name>next_sibling</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="522" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a6c0b2cdbafda832011aa90ad6c24de49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::previous_sibling</definition>
        <argsstring>(const char_t *name) const</argsstring>
        <name>previous_sibling</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="523" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ad00be2662bbeef5912d942d1f7288eb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::attribute</definition>
        <argsstring>(const char_t *name, xml_attribute &amp;hint) const</argsstring>
        <name>attribute</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>hint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="526" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a7d6f34401c66f5f4c76033a2b156748c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char_t *</type>
        <definition>const char_t* pugi::xml_node::child_value</definition>
        <argsstring>() const</argsstring>
        <name>child_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="529" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a2414aacfd5ad293e733306f5be72ae5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char_t *</type>
        <definition>const char_t* pugi::xml_node::child_value</definition>
        <argsstring>(const char_t *name) const</argsstring>
        <name>child_value</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="532" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a76043b1d6318d2e26f05d1725df73761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::set_name</definition>
        <argsstring>(const char_t *rhs)</argsstring>
        <name>set_name</name>
        <param>
          <type>const char_t *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="535" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1affa26e7cc8d95259ea426c1be348e37c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::set_value</definition>
        <argsstring>(const char_t *rhs)</argsstring>
        <name>set_value</name>
        <param>
          <type>const char_t *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="536" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a47b328e66413f1c6134e29d21a5a4d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::append_attribute</definition>
        <argsstring>(const char_t *name)</argsstring>
        <name>append_attribute</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="539" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a79e6ff9f9c51d1fa7aa88a5b36add3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::prepend_attribute</definition>
        <argsstring>(const char_t *name)</argsstring>
        <name>prepend_attribute</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="540" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a40aeecd8772b36c517c226fd12bc1450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::insert_attribute_after</definition>
        <argsstring>(const char_t *name, const xml_attribute &amp;attr)</argsstring>
        <name>insert_attribute_after</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="541" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a6695f3b7dcb86347a00b4bb16fbb88ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::insert_attribute_before</definition>
        <argsstring>(const char_t *name, const xml_attribute &amp;attr)</argsstring>
        <name>insert_attribute_before</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="542" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ab480b6e6080d4dd83ebb46e5d10e706b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::append_copy</definition>
        <argsstring>(const xml_attribute &amp;proto)</argsstring>
        <name>append_copy</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="545" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a82e79ec07dc0e894a0567dcadcc7a9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::prepend_copy</definition>
        <argsstring>(const xml_attribute &amp;proto)</argsstring>
        <name>prepend_copy</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="546" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a406c755ac801843febcf905228d7d0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::insert_copy_after</definition>
        <argsstring>(const xml_attribute &amp;proto, const xml_attribute &amp;attr)</argsstring>
        <name>insert_copy_after</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="547" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a998d3fe85ce36aa1de55cb7403cc0dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::insert_copy_before</definition>
        <argsstring>(const xml_attribute &amp;proto, const xml_attribute &amp;attr)</argsstring>
        <name>insert_copy_before</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="548" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a498e41f14a04014eaf5d6af3ae8f9d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::append_child</definition>
        <argsstring>(xml_node_type type=node_element)</argsstring>
        <name>append_child</name>
        <param>
          <type>xml_node_type</type>
          <declname>type</declname>
          <defval>node_element</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="551" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a44d9683f11e29baed1bcb00686b4f2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::prepend_child</definition>
        <argsstring>(xml_node_type type=node_element)</argsstring>
        <name>prepend_child</name>
        <param>
          <type>xml_node_type</type>
          <declname>type</declname>
          <defval>node_element</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="552" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1afb2c70e3908e65b001dcd9bcf794d605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_child_after</definition>
        <argsstring>(xml_node_type type, const xml_node &amp;node)</argsstring>
        <name>insert_child_after</name>
        <param>
          <type>xml_node_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="553" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1aa07c23d9835e8174fbe75f0c9a0c7d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_child_before</definition>
        <argsstring>(xml_node_type type, const xml_node &amp;node)</argsstring>
        <name>insert_child_before</name>
        <param>
          <type>xml_node_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="554" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a7f2d90363b0bb2e42566e0ca2e503020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::append_child</definition>
        <argsstring>(const char_t *name)</argsstring>
        <name>append_child</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="557" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ac0e4d20eb8e5ac53ec32107240dcd315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::prepend_child</definition>
        <argsstring>(const char_t *name)</argsstring>
        <name>prepend_child</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="558" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ad060be40b3aafe7b5d7b86597b2762c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_child_after</definition>
        <argsstring>(const char_t *name, const xml_node &amp;node)</argsstring>
        <name>insert_child_after</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="559" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a21b8665790dec7a3689159addb4ca014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_child_before</definition>
        <argsstring>(const char_t *name, const xml_node &amp;node)</argsstring>
        <name>insert_child_before</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="560" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a56796f244b13436de2f33da3e8c182f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::append_copy</definition>
        <argsstring>(const xml_node &amp;proto)</argsstring>
        <name>append_copy</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="563" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a26d22e6a651616a3cf114f4efeccd602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::prepend_copy</definition>
        <argsstring>(const xml_node &amp;proto)</argsstring>
        <name>prepend_copy</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="564" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a0789c30be732fc91069ac6a18dec4d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_copy_after</definition>
        <argsstring>(const xml_node &amp;proto, const xml_node &amp;node)</argsstring>
        <name>insert_copy_after</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="565" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a86369d34a6d625e1859752de89c2bf30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_copy_before</definition>
        <argsstring>(const xml_node &amp;proto, const xml_node &amp;node)</argsstring>
        <name>insert_copy_before</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>proto</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="566" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a83619cb521a024b87e7a63800669fecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::append_move</definition>
        <argsstring>(const xml_node &amp;moved)</argsstring>
        <name>append_move</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>moved</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="569" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a3a82e734770972017b8d23d8ec07e70a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::prepend_move</definition>
        <argsstring>(const xml_node &amp;moved)</argsstring>
        <name>prepend_move</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>moved</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="570" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a323d1ae706926de76f69450345eb7b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_move_after</definition>
        <argsstring>(const xml_node &amp;moved, const xml_node &amp;node)</argsstring>
        <name>insert_move_after</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>moved</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="571" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a0f1a3dd31b07d70ae292d1d4940d0021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::insert_move_before</definition>
        <argsstring>(const xml_node &amp;moved, const xml_node &amp;node)</argsstring>
        <name>insert_move_before</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>moved</declname>
        </param>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="572" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ad2a65ed9e5a0c8ff40918e98c2c2319d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::remove_attribute</definition>
        <argsstring>(const xml_attribute &amp;a)</argsstring>
        <name>remove_attribute</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="575" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a9b93a949a0c8d23c6457eb18bedf6fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::remove_attribute</definition>
        <argsstring>(const char_t *name)</argsstring>
        <name>remove_attribute</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="576" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a0adf80ff295b5ebfc38d9164b99c1ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::remove_child</definition>
        <argsstring>(const xml_node &amp;n)</argsstring>
        <name>remove_child</name>
        <param>
          <type>const <ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="579" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8816dfd666bd9507bfb646f7e0a278bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::remove_child</definition>
        <argsstring>(const char_t *name)</argsstring>
        <name>remove_child</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="580" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a9c35d3f3595af46da1208cf9d14715c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpugi_1_1xml__parse__result" kindref="compound">xml_parse_result</ref></type>
        <definition>xml_parse_result pugi::xml_node::append_buffer</definition>
        <argsstring>(const void *contents, size_t size, unsigned int options=parse_default, xml_encoding encoding=encoding_auto)</argsstring>
        <name>append_buffer</name>
        <param>
          <type>const void *</type>
          <declname>contents</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>options</declname>
          <defval>parse_default</defval>
        </param>
        <param>
          <type>xml_encoding</type>
          <declname>encoding</declname>
          <defval>encoding_auto</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="585" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a4494f8397e3bdf586b1dec6da19f5649" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Predicate</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpugi_1_1xml__attribute" kindref="compound">xml_attribute</ref></type>
        <definition>xml_attribute pugi::xml_node::find_attribute</definition>
        <argsstring>(Predicate pred) const</argsstring>
        <name>find_attribute</name>
        <param>
          <type>Predicate</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="588" column="27" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="588" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ad00b88f63f6015ee34d4e38dc8ed4e80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Predicate</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::find_child</definition>
        <argsstring>(Predicate pred) const</argsstring>
        <name>find_child</name>
        <param>
          <type>Predicate</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="600" column="22" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="600" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8c360e4966b4015c50b927009c3d1ee3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Predicate</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::find_node</definition>
        <argsstring>(Predicate pred) const</argsstring>
        <name>find_node</name>
        <param>
          <type>Predicate</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="612" column="22" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="612" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a6929d610ca3a5c85b42037a8d9b22f4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::find_child_by_attribute</definition>
        <argsstring>(const char_t *name, const char_t *attr_name, const char_t *attr_value) const</argsstring>
        <name>find_child_by_attribute</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char_t *</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>const char_t *</type>
          <declname>attr_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="636" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a37ec6cd06119f0bff7a0bfdf1193fa1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::find_child_by_attribute</definition>
        <argsstring>(const char_t *attr_name, const char_t *attr_value) const</argsstring>
        <name>find_child_by_attribute</name>
        <param>
          <type>const char_t *</type>
          <declname>attr_name</declname>
        </param>
        <param>
          <type>const char_t *</type>
          <declname>attr_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="637" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ad695e3498bf08d58d0d5c03142a06ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string_t</type>
        <definition>string_t pugi::xml_node::path</definition>
        <argsstring>(char_t delimiter=&apos;/&apos;) const</argsstring>
        <name>path</name>
        <param>
          <type>char_t</type>
          <declname>delimiter</declname>
          <defval>&apos;/&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="641" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a4dfa5b23ace286b93989899067cb1282" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node" kindref="compound">xml_node</ref></type>
        <definition>xml_node pugi::xml_node::first_element_by_path</definition>
        <argsstring>(const char_t *path, char_t delimiter=&apos;/&apos;) const</argsstring>
        <name>first_element_by_path</name>
        <param>
          <type>const char_t *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char_t</type>
          <declname>delimiter</declname>
          <defval>&apos;/&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="645" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a41be22248598bdf1575ed8d7bdd77807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pugi::xml_node::traverse</definition>
        <argsstring>(xml_tree_walker &amp;walker)</argsstring>
        <name>traverse</name>
        <param>
          <type><ref refid="classpugi_1_1xml__tree__walker" kindref="compound">xml_tree_walker</ref> &amp;</type>
          <declname>walker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="648" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8efe3576017e18426cf33594441c0f3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xpath__node" kindref="compound">xpath_node</ref></type>
        <definition>xpath_node pugi::xml_node::select_node</definition>
        <argsstring>(const char_t *query, xpath_variable_set *variables=0) const</argsstring>
        <name>select_node</name>
        <param>
          <type>const char_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classpugi_1_1xpath__variable__set" kindref="compound">xpath_variable_set</ref> *</type>
          <declname>variables</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="652" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a484ffd2ecbaa29f580c4d87a236fc5a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xpath__node" kindref="compound">xpath_node</ref></type>
        <definition>xpath_node pugi::xml_node::select_node</definition>
        <argsstring>(const xpath_query &amp;query) const</argsstring>
        <name>select_node</name>
        <param>
          <type>const <ref refid="classpugi_1_1xpath__query" kindref="compound">xpath_query</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="653" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ae39bdcc40aa988cddbe1092b91858292" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xpath__node__set" kindref="compound">xpath_node_set</ref></type>
        <definition>xpath_node_set pugi::xml_node::select_nodes</definition>
        <argsstring>(const char_t *query, xpath_variable_set *variables=0) const</argsstring>
        <name>select_nodes</name>
        <param>
          <type>const char_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classpugi_1_1xpath__variable__set" kindref="compound">xpath_variable_set</ref> *</type>
          <declname>variables</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="656" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1adbe78a62d770a3a1b44e2297973a9a8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xpath__node__set" kindref="compound">xpath_node_set</ref></type>
        <definition>xpath_node_set pugi::xml_node::select_nodes</definition>
        <argsstring>(const xpath_query &amp;query) const</argsstring>
        <name>select_nodes</name>
        <param>
          <type>const <ref refid="classpugi_1_1xpath__query" kindref="compound">xpath_query</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="657" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a056b21c47cf6f04dc370399d63b6ab42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xpath__node" kindref="compound">xpath_node</ref></type>
        <definition>xpath_node pugi::xml_node::select_single_node</definition>
        <argsstring>(const char_t *query, xpath_variable_set *variables=0) const</argsstring>
        <name>select_single_node</name>
        <param>
          <type>const char_t *</type>
          <declname>query</declname>
        </param>
        <param>
          <type><ref refid="classpugi_1_1xpath__variable__set" kindref="compound">xpath_variable_set</ref> *</type>
          <declname>variables</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="660" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ae832e4892c9e71070fa365687b4d3110" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xpath__node" kindref="compound">xpath_node</ref></type>
        <definition>xpath_node pugi::xml_node::select_single_node</definition>
        <argsstring>(const xpath_query &amp;query) const</argsstring>
        <name>select_single_node</name>
        <param>
          <type>const <ref refid="classpugi_1_1xpath__query" kindref="compound">xpath_query</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="661" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a534869c396c2c163bf4af9ceb6440a39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pugi::xml_node::print</definition>
        <argsstring>(xml_writer &amp;writer, const char_t *indent=&quot;\t&quot;, unsigned int flags=format_default, xml_encoding encoding=encoding_auto, unsigned int depth=0) const</argsstring>
        <name>print</name>
        <param>
          <type><ref refid="classpugi_1_1xml__writer" kindref="compound">xml_writer</ref> &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const char_t *</type>
          <declname>indent</declname>
          <defval>&quot;\t&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
          <defval>format_default</defval>
        </param>
        <param>
          <type>xml_encoding</type>
          <declname>encoding</declname>
          <defval>encoding_auto</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>depth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="666" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a943e71526b391a49fecbd9d15a6b2e69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pugi::xml_node::print</definition>
        <argsstring>(std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;os, const char_t *indent=&quot;\t&quot;, unsigned int flags=format_default, xml_encoding encoding=encoding_auto, unsigned int depth=0) const</argsstring>
        <name>print</name>
        <param>
          <type>std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const char_t *</type>
          <declname>indent</declname>
          <defval>&quot;\t&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
          <defval>format_default</defval>
        </param>
        <param>
          <type>xml_encoding</type>
          <declname>encoding</declname>
          <defval>encoding_auto</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>depth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="670" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8b6c5fd561c518a794abe0ed82cb0450" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pugi::xml_node::print</definition>
        <argsstring>(std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;os, const char_t *indent=&quot;\t&quot;, unsigned int flags=format_default, unsigned int depth=0) const</argsstring>
        <name>print</name>
        <param>
          <type>std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const char_t *</type>
          <declname>indent</declname>
          <defval>&quot;\t&quot;</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
          <defval>format_default</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>depth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="671" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a20b39c18ebd1609344c5e5cdfcfc0fd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator pugi::xml_node::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="677" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a926c711d104b80309e84031a85401b3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__node__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator pugi::xml_node::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="678" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8f920a53b7bbe2d1b9c66892fe8622ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute__iterator" kindref="compound">attribute_iterator</ref></type>
        <definition>attribute_iterator pugi::xml_node::attributes_begin</definition>
        <argsstring>() const</argsstring>
        <name>attributes_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="683" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1af1569b30db5f9c09aa8af9b0ad19b953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__attribute__iterator" kindref="compound">attribute_iterator</ref></type>
        <definition>attribute_iterator pugi::xml_node::attributes_end</definition>
        <argsstring>() const</argsstring>
        <name>attributes_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="684" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a8155a7ccd51f195bd5228b850c946d4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__object__range" kindref="compound">xml_object_range</ref>&lt; <ref refid="classpugi_1_1xml__node__iterator" kindref="compound">xml_node_iterator</ref> &gt;</type>
        <definition>xml_object_range&lt;xml_node_iterator&gt; pugi::xml_node::children</definition>
        <argsstring>() const</argsstring>
        <name>children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="687" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a1641a1bd09bfc42b4f6e72407d2d9b41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__object__range" kindref="compound">xml_object_range</ref>&lt; <ref refid="classpugi_1_1xml__named__node__iterator" kindref="compound">xml_named_node_iterator</ref> &gt;</type>
        <definition>xml_object_range&lt;xml_named_node_iterator&gt; pugi::xml_node::children</definition>
        <argsstring>(const char_t *name) const</argsstring>
        <name>children</name>
        <param>
          <type>const char_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="688" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1abacb62e25c1178c31d841f2643fc054e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpugi_1_1xml__object__range" kindref="compound">xml_object_range</ref>&lt; <ref refid="classpugi_1_1xml__attribute__iterator" kindref="compound">xml_attribute_iterator</ref> &gt;</type>
        <definition>xml_object_range&lt;xml_attribute_iterator&gt; pugi::xml_node::attributes</definition>
        <argsstring>() const</argsstring>
        <name>attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="689" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a7a100242db3c432629993c9d3310dd01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ptrdiff_t</type>
        <definition>ptrdiff_t pugi::xml_node::offset_debug</definition>
        <argsstring>() const</argsstring>
        <name>offset_debug</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="692" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1ab9a95d30e6f0f38565fc6faa7effae92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t pugi::xml_node::hash_value</definition>
        <argsstring>() const</argsstring>
        <name>hash_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="695" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classpugi_1_1xml__node_1a463901a7034b11ad19bb9111674e079c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>xml_node_struct *</type>
        <definition>xml_node_struct* pugi::xml_node::internal_object</definition>
        <argsstring>() const</argsstring>
        <name>internal_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="698" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>pugi::xml_document</label>
        <link refid="classpugi_1_1xml__document"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>pugi::xml_node</label>
        <link refid="classpugi_1_1xml__node"/>
      </node>
    </inheritancegraph>
    <location file="/home/cooper/test/avl_gui_new/include/pugixml.hpp" line="454" column="1" bodyfile="/home/cooper/test/avl_gui_new/include/pugixml.hpp" bodystart="453" bodyend="699"/>
    <listofallmembers>
      <member refid="classpugi_1_1xml__node_1a45a5b342de1e37a60565f7693f03cc08" prot="protected" virt="non-virtual"><scope>pugi::xml_node</scope><name>_root</name></member>
      <member refid="classpugi_1_1xml__node_1a47b328e66413f1c6134e29d21a5a4d7c" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>append_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a9c35d3f3595af46da1208cf9d14715c0" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>append_buffer</name></member>
      <member refid="classpugi_1_1xml__node_1a498e41f14a04014eaf5d6af3ae8f9d99" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>append_child</name></member>
      <member refid="classpugi_1_1xml__node_1a7f2d90363b0bb2e42566e0ca2e503020" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>append_child</name></member>
      <member refid="classpugi_1_1xml__node_1ab480b6e6080d4dd83ebb46e5d10e706b" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>append_copy</name></member>
      <member refid="classpugi_1_1xml__node_1a56796f244b13436de2f33da3e8c182f8" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>append_copy</name></member>
      <member refid="classpugi_1_1xml__node_1a83619cb521a024b87e7a63800669fecf" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>append_move</name></member>
      <member refid="classpugi_1_1xml__node_1a8992c17cd7218cf24c5150eeb47e1451" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>attribute</name></member>
      <member refid="classpugi_1_1xml__node_1ad00be2662bbeef5912d942d1f7288eb3" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a9084f97350ffc64af1eaf7c17c57f4ba" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>attribute_iterator</name></member>
      <member refid="classpugi_1_1xml__node_1abacb62e25c1178c31d841f2643fc054e" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>attributes</name></member>
      <member refid="classpugi_1_1xml__node_1a8f920a53b7bbe2d1b9c66892fe8622ec" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>attributes_begin</name></member>
      <member refid="classpugi_1_1xml__node_1af1569b30db5f9c09aa8af9b0ad19b953" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>attributes_end</name></member>
      <member refid="classpugi_1_1xml__node_1a20b39c18ebd1609344c5e5cdfcfc0fd3" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>begin</name></member>
      <member refid="classpugi_1_1xml__node_1af3994814d80cdf2aef455bf3948c3385" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>child</name></member>
      <member refid="classpugi_1_1xml__node_1a7d6f34401c66f5f4c76033a2b156748c" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>child_value</name></member>
      <member refid="classpugi_1_1xml__node_1a2414aacfd5ad293e733306f5be72ae5c" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>child_value</name></member>
      <member refid="classpugi_1_1xml__node_1a8155a7ccd51f195bd5228b850c946d4d" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>children</name></member>
      <member refid="classpugi_1_1xml__node_1a1641a1bd09bfc42b4f6e72407d2d9b41" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>children</name></member>
      <member refid="classpugi_1_1xml__node_1ad6c9835f849ac6aeba8b920a63197b08" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>empty</name></member>
      <member refid="classpugi_1_1xml__node_1a926c711d104b80309e84031a85401b3d" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>end</name></member>
      <member refid="classpugi_1_1xml__node_1a4494f8397e3bdf586b1dec6da19f5649" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>find_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1ad00b88f63f6015ee34d4e38dc8ed4e80" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>find_child</name></member>
      <member refid="classpugi_1_1xml__node_1a6929d610ca3a5c85b42037a8d9b22f4f" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>find_child_by_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a37ec6cd06119f0bff7a0bfdf1193fa1b" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>find_child_by_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a8c360e4966b4015c50b927009c3d1ee3" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>find_node</name></member>
      <member refid="classpugi_1_1xml__node_1a3eaa68e1bcad9956590c0b8812d75bdf" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>first_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a7ed8da5b747abef912f014f91c0560da" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>first_child</name></member>
      <member refid="classpugi_1_1xml__node_1a4dfa5b23ace286b93989899067cb1282" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>first_element_by_path</name></member>
      <member refid="classpugi_1_1xml__node_1ab9a95d30e6f0f38565fc6faa7effae92" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>hash_value</name></member>
      <member refid="classpugi_1_1xml__node_1a40aeecd8772b36c517c226fd12bc1450" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_attribute_after</name></member>
      <member refid="classpugi_1_1xml__node_1a6695f3b7dcb86347a00b4bb16fbb88ed" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_attribute_before</name></member>
      <member refid="classpugi_1_1xml__node_1afb2c70e3908e65b001dcd9bcf794d605" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_child_after</name></member>
      <member refid="classpugi_1_1xml__node_1ad060be40b3aafe7b5d7b86597b2762c4" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_child_after</name></member>
      <member refid="classpugi_1_1xml__node_1aa07c23d9835e8174fbe75f0c9a0c7d7b" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_child_before</name></member>
      <member refid="classpugi_1_1xml__node_1a21b8665790dec7a3689159addb4ca014" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_child_before</name></member>
      <member refid="classpugi_1_1xml__node_1a406c755ac801843febcf905228d7d0a9" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_copy_after</name></member>
      <member refid="classpugi_1_1xml__node_1a0789c30be732fc91069ac6a18dec4d92" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_copy_after</name></member>
      <member refid="classpugi_1_1xml__node_1a998d3fe85ce36aa1de55cb7403cc0dd7" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_copy_before</name></member>
      <member refid="classpugi_1_1xml__node_1a86369d34a6d625e1859752de89c2bf30" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_copy_before</name></member>
      <member refid="classpugi_1_1xml__node_1a323d1ae706926de76f69450345eb7b44" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_move_after</name></member>
      <member refid="classpugi_1_1xml__node_1a0f1a3dd31b07d70ae292d1d4940d0021" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>insert_move_before</name></member>
      <member refid="classpugi_1_1xml__node_1a463901a7034b11ad19bb9111674e079c" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>internal_object</name></member>
      <member refid="classpugi_1_1xml__node_1ae053ea39add5a64de584f7a81212e388" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>iterator</name></member>
      <member refid="classpugi_1_1xml__node_1a990a18d73198bcc1126151bfda3b6d3f" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>last_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1aae4b30f38f3b2fb92552766d47cc8899" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>last_child</name></member>
      <member refid="classpugi_1_1xml__node_1afd9a4fad8bbbcb2ff8bf099f140dae48" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>name</name></member>
      <member refid="classpugi_1_1xml__node_1ae20b80ae97d770242b06ff6e3f2852f6" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>next_sibling</name></member>
      <member refid="classpugi_1_1xml__node_1a3cfa7927b5176668d8cfb6883eb4c3bc" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>next_sibling</name></member>
      <member refid="classpugi_1_1xml__node_1a7a100242db3c432629993c9d3310dd01" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>offset_debug</name></member>
      <member refid="classpugi_1_1xml__node_1aea48109b0aa81ede9d488263412ef363" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator unspecified_bool_type</name></member>
      <member refid="classpugi_1_1xml__node_1aab507574954191a49fa02c4f21e91960" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator!</name></member>
      <member refid="classpugi_1_1xml__node_1a40824364b7bfc39806c315d6a1efc5f4" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator!=</name></member>
      <member refid="classpugi_1_1xml__node_1a8f72f466e4e44ef77a49fc1f3b51b783" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator&lt;</name></member>
      <member refid="classpugi_1_1xml__node_1a322be74394b3726d74ce588f98f46559" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator&lt;=</name></member>
      <member refid="classpugi_1_1xml__node_1a93ec2237e647a58d3b02b5a3034ee38d" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator==</name></member>
      <member refid="classpugi_1_1xml__node_1ade33edf2c1dd7341f802f141fac87398" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator&gt;</name></member>
      <member refid="classpugi_1_1xml__node_1a307aea478b6a80611571650ef6c75c4a" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>operator&gt;=</name></member>
      <member refid="classpugi_1_1xml__node_1aa5e551fb7095338188a7ed33ca6026b4" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>parent</name></member>
      <member refid="classpugi_1_1xml__node_1ad695e3498bf08d58d0d5c03142a06ba1" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>path</name></member>
      <member refid="classpugi_1_1xml__node_1a79e6ff9f9c51d1fa7aa88a5b36add3a4" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>prepend_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a44d9683f11e29baed1bcb00686b4f2aa" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>prepend_child</name></member>
      <member refid="classpugi_1_1xml__node_1ac0e4d20eb8e5ac53ec32107240dcd315" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>prepend_child</name></member>
      <member refid="classpugi_1_1xml__node_1a82e79ec07dc0e894a0567dcadcc7a9b9" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>prepend_copy</name></member>
      <member refid="classpugi_1_1xml__node_1a26d22e6a651616a3cf114f4efeccd602" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>prepend_copy</name></member>
      <member refid="classpugi_1_1xml__node_1a3a82e734770972017b8d23d8ec07e70a" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>prepend_move</name></member>
      <member refid="classpugi_1_1xml__node_1a7fe1a00db01eaedb4f3ee592aa5d735c" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>previous_sibling</name></member>
      <member refid="classpugi_1_1xml__node_1a6c0b2cdbafda832011aa90ad6c24de49" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>previous_sibling</name></member>
      <member refid="classpugi_1_1xml__node_1a534869c396c2c163bf4af9ceb6440a39" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>print</name></member>
      <member refid="classpugi_1_1xml__node_1a943e71526b391a49fecbd9d15a6b2e69" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>print</name></member>
      <member refid="classpugi_1_1xml__node_1a8b6c5fd561c518a794abe0ed82cb0450" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>print</name></member>
      <member refid="classpugi_1_1xml__node_1ad2a65ed9e5a0c8ff40918e98c2c2319d" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>remove_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a9b93a949a0c8d23c6457eb18bedf6fe8" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>remove_attribute</name></member>
      <member refid="classpugi_1_1xml__node_1a0adf80ff295b5ebfc38d9164b99c1ee3" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>remove_child</name></member>
      <member refid="classpugi_1_1xml__node_1a8816dfd666bd9507bfb646f7e0a278bd" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>remove_child</name></member>
      <member refid="classpugi_1_1xml__node_1a775f091ea1847d0c5d841b81718ed9e7" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>root</name></member>
      <member refid="classpugi_1_1xml__node_1a8efe3576017e18426cf33594441c0f3c" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>select_node</name></member>
      <member refid="classpugi_1_1xml__node_1a484ffd2ecbaa29f580c4d87a236fc5a2" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>select_node</name></member>
      <member refid="classpugi_1_1xml__node_1ae39bdcc40aa988cddbe1092b91858292" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>select_nodes</name></member>
      <member refid="classpugi_1_1xml__node_1adbe78a62d770a3a1b44e2297973a9a8e" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>select_nodes</name></member>
      <member refid="classpugi_1_1xml__node_1a056b21c47cf6f04dc370399d63b6ab42" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>select_single_node</name></member>
      <member refid="classpugi_1_1xml__node_1ae832e4892c9e71070fa365687b4d3110" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>select_single_node</name></member>
      <member refid="classpugi_1_1xml__node_1a76043b1d6318d2e26f05d1725df73761" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>set_name</name></member>
      <member refid="classpugi_1_1xml__node_1affa26e7cc8d95259ea426c1be348e37c" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>set_value</name></member>
      <member refid="classpugi_1_1xml__node_1aba8c6bfb169529ee9f3d6f07a5eee9e2" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>text</name></member>
      <member refid="classpugi_1_1xml__node_1a41be22248598bdf1575ed8d7bdd77807" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>traverse</name></member>
      <member refid="classpugi_1_1xml__node_1ac5405119b45e539d3527fe6941546099" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>type</name></member>
      <member refid="classpugi_1_1xml__node_1a83fe32b933530b244865ee401b08b037" prot="protected" virt="non-virtual"><scope>pugi::xml_node</scope><name>unspecified_bool_type</name></member>
      <member refid="classpugi_1_1xml__node_1a0c72eab9fc89e492d8013d9f269820a9" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>value</name></member>
      <member refid="classpugi_1_1xml__node_1aeff34dec57ee910e3344631528969539" prot="private" virt="non-virtual"><scope>pugi::xml_node</scope><name>xml_attribute_iterator</name></member>
      <member refid="classpugi_1_1xml__node_1a1e60ab2fa6d6adb56f4b833761fc0b66" prot="private" virt="non-virtual"><scope>pugi::xml_node</scope><name>xml_named_node_iterator</name></member>
      <member refid="classpugi_1_1xml__node_1a1db6c67c97cddd74f59d872057987432" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>xml_node</name></member>
      <member refid="classpugi_1_1xml__node_1a6897fb4e94def0ec60fda1f459bd746d" prot="public" virt="non-virtual"><scope>pugi::xml_node</scope><name>xml_node</name></member>
      <member refid="classpugi_1_1xml__node_1aa25e28e29a8cec4daa60cdd2d5934757" prot="private" virt="non-virtual"><scope>pugi::xml_node</scope><name>xml_node_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
